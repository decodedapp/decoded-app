name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Type validation and generation
  typegen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate API types
        run: yarn typegen:dev

      - name: Cache Generated API Types
        uses: actions/cache@v3
        with:
          path: src/api/generated
          key: ${{ runner.os }}-api-types-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-api-types-

      - name: Check for type changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "API types have changed. Please commit the updated types."
            git diff
            exit 1
          fi

      - name: Upload generated API types (for review/debug)
        uses: actions/upload-artifact@v3
        with:
          name: api-types
          path: src/api/generated

      # TODO: Add PR comment bot to alert if API types change

  # Lint and type check
  lint-and-type-check:
    runs-on: ubuntu-latest
    needs: typegen
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run ESLint
        run: yarn lint

      - name: Type check
        run: yarn tsc --noEmit

  # Build test
  build:
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build application
        run: yarn build

  # Test (for future test implementation)
  test:
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        run: yarn test
        # TODO: Enable when test script is added

  # Deploy (when pushing to main branch)
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build for production
        run: yarn build

      - name: Output deployment info
        run: echo "Branch: ${{ github.ref }}, Commit: ${{ github.sha }}"

      - name: Deploy to production
        run: |
          echo "Deploy to production environment"
          # TODO: Add actual deployment script
          # Examples: Vercel, Netlify, AWS, etc.
